{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  console.log('hi'); // try {\n  //   const collectionRef = firestore.collection('collections')\n  //   const snapshot = yield collectionRef.get()\n  //   const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n  //   yield put(fetchCollectionsSuccess(collectionsMap))\n  // } catch (error) {\n  //   yield put(fetchCollectionsFailure(error.message))\n  // }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SACEC,uBADF,EAEEC,uBAFF,QAIO,gBAJP;AAMA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EADuC,CAEvC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMX,SAAS,CACbO,eAAe,CAACK,uBADH,EAEbJ,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n\n} from './shop.actions'\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n  console.log('hi')\n  // try {\n  //   const collectionRef = firestore.collection('collections')\n  //   const snapshot = yield collectionRef.get()\n  //   const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n  //   yield put(fetchCollectionsSuccess(collectionsMap))\n\n  // } catch (error) {\n  //   yield put(fetchCollectionsFailure(error.message))\n  // }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}