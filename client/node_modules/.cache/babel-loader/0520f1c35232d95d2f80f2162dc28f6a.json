{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/clothing/src/pages/collection/collection.component.js\";\nimport React, { useEffect } from 'react';\nimport CollectionItem from '../../components/CollectionItem/CollectionItem';\nimport { connect } from 'react-redux';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport './collection.scss';\nimport { firestore } from '../../firebase/firebase.utils';\n\nconst CollectionPage = ({\n  collection,\n  ownProps\n}) => {\n  useEffect(() => {\n    console.log('i am subscribing');\n    const unsubscribe = firestore.collection('collections').onSnapshot(snap => {\n      console.log(snap);\n    });\n    return () => {};\n  });\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ownProps,\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps, null)(CollectionPage);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/pages/collection/collection.component.js"],"names":["React","useEffect","CollectionItem","connect","selectCollection","firestore","CollectionPage","collection","ownProps","console","log","unsubscribe","onSnapshot","snap","title","items","map","item","id","mapStateToProps","state","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,OAAO,mBAAP;AACA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,MAAMC,cAAc,GAAG,CAAE;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAF,KAAgC;AAErDP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMC,WAAW,GAAGN,SAAS,CAACE,UAAV,CAAqB,aAArB,EAAoCK,UAApC,CAA+CC,IAAI,IAAI;AACzEJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,KAFmB,CAApB;AAGA,WAAO,MAAM,CAEZ,CAFD;AAGD,GARQ,CAAT;AAFqD,QAY7CC,KAZ6C,GAY5BP,UAZ4B,CAY7CO,KAZ6C;AAAA,QAYtCC,KAZsC,GAY5BR,UAZ4B,CAYtCQ,KAZsC;AAcrD,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACZ,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CAFF,CADF;AAYD,CA1BD;;AA8BA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQZ,QAAR,MAAqB;AAC3CA,EAAAA,QAD2C;AAE3CD,EAAAA,UAAU,EAAEH,gBAAgB,CAACI,QAAQ,CAACa,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDH,KAArD;AAF+B,CAArB,CAAxB;;AAKA,eAAejB,OAAO,CAACgB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bb,cAA/B,CAAf","sourcesContent":["import React, { useEffect } from 'react'\n\nimport CollectionItem from '../../components/CollectionItem/CollectionItem'\nimport { connect } from 'react-redux'\nimport { selectCollection } from '../../redux/shop/shop.selectors'\n\nimport './collection.scss'\nimport { firestore } from '../../firebase/firebase.utils'\n\nconst CollectionPage = ( { collection, ownProps } ) => {\n\n  useEffect(() => {\n    console.log('i am subscribing')\n    const unsubscribe = firestore.collection('collections').onSnapshot(snap => {\n      console.log(snap)\n    })\n    return () => {\n\n    }\n  })\n\n  const { title, items } = collection\n\n  return (\n    <div className='collection-page'>\n      <h2 className='title'>{title}</h2>\n      <div className='items'>\n        {\n          items.map(item =>\n            <CollectionItem key={item.id} item={item}/>\n            )\n        }\n      </div>\n    </div>\n  )\n}\n\n\n\nconst mapStateToProps = (state, ownProps) =>({\n  ownProps,\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n})\n\nexport default connect(mapStateToProps, null)(CollectionPage)\n\n"]},"metadata":{},"sourceType":"module"}