{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/clothing/src/components/sign-up/SignUp.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.jsx';\nimport CustomButton from '../custom-button/CustomButton.jsx';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils.js';\nimport { signupUser } from '../../redux/user/user.sagas';\nimport './SignUp.scss';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n\n      const onUserSignup = this.props.onUserSignup;\n      signupUser(email, password); // try {\n      //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n      //   await createUserProfileDocument(user, {displayName})\n      //   this.setState({\n      //     displayName: '',\n      //     email: '',\n      //     password: '',\n      //     confirmPassword: ''\n      //   })\n      // } catch(error) {\n      //   console.error('error at' + error)\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signupUser\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/components/sign-up/SignUp.jsx"],"names":["React","connect","FormInput","CustomButton","auth","createUserProfileDocument","signupUser","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","alert","onUserSignup","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/FormInput.jsx';\nimport CustomButton from '../custom-button/CustomButton.jsx'\n\nimport {auth, createUserProfileDocument } from '../../firebase/firebase.utils.js';\nimport { signupUser } from '../../redux/user/user.sagas'\n\nimport './SignUp.scss'\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    }\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const {displayName, email, password, confirmPassword} = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\")\n      return;\n    }\n\n    const { onUserSignup } = this.props\n    signupUser(email, password)\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n\n    //   await createUserProfileDocument(user, {displayName})\n    //   this.setState({\n    //     displayName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: ''\n    //   })\n\n    // } catch(error) {\n    //   console.error('error at' + error)\n    // }\n\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n\n  render() {\n    const {displayName, email, password, confirmPassword} = this.state;\n\n    return (\n      <div className='sign-up'>\n        <h2 className='title'>I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={this.handleChange}\n            label='Display Name'\n            required\n          />\n\n         <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={this.handleChange}\n            label='email'\n            required\n          />\n\n         <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={this.handleChange}\n            label='password'\n            required\n          />\n\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label='Confirm Password'\n            required\n          />\n\n        <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signupUser\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}