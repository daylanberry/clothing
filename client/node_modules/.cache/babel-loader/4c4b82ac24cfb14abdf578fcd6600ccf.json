{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/clothing/src/pages/shop/ShopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/pages/shop/ShopPage.jsx"],"names":["React","Route","connect","updateCollections","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","unsubscribeFromSnapShot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","props","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,KAAV,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,uBAFqC,GAEX,IAFW;AAAA;;AAIrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AAC1C,YAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AAED,KAHD;AAID;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEhB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEf,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AArBoC;;AAyBvC,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,iBAAiB,EAAGa,cAAD,IAAoBM,QAAQ,CAACnB,iBAAiB,CAACa,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAKA,eAAed,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from 'react'\nimport  { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview'\n\nimport CollectionPage from '../collection/collection.component'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nclass ShopPage extends React.Component {\n\n  unsubscribeFromSnapShot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections')\n\n    collectionRef.onSnapshot( async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\n    })\n  }\n\n  render() {\n    const { match } = this.props\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} component={CollectionsOverview}/>\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage}/>\n      </div>\n    )\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap))\n})\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}