{"ast":null,"code":"import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport { firestore, getCurrentUser } from '../../firebase/firebase.utils';\nimport UserActionTypes from '../user/user.types';\nimport CartActionTypes from './cart.types';\nimport { clearCart } from './cart.actions';\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* addItemToUserCollection({\n  payload\n}) {\n  try {\n    const _ref = yield getCurrentUser(),\n          uid = _ref.uid;\n\n    const userRef = yield firestore.collection('users').doc(uid);\n    const itemRef = yield userRef.collection('items').doc(payload.id.toString());\n    const snap = itemRef.get();\n    console.log(snap); // const batch = yield firestore.batch()\n    // const test = yield batch.set(itemRef, {\n    //   items: payload\n    // })\n    // yield batch.commit()\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM, addItemToUserCollection);\n}\nexport function* clearItemFromCart() {\n  yield takeLatest(CartActionTypes.CLEA);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/client/src/redux/cart/cart.sagas.js"],"names":["all","call","takeLatest","put","firestore","getCurrentUser","UserActionTypes","CartActionTypes","clearCart","clearCartOnSignOut","onSignOutSuccess","SIGN_OUT_SUCCESS","addItemToUserCollection","payload","uid","userRef","collection","doc","itemRef","id","toString","snap","get","console","log","err","onAddItem","ADD_ITEM","clearItemFromCart","CLEA","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,+BAA1C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAGA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMN,GAAG,CAACK,SAAS,EAAV,CAAT;AACD;AAED,OAAO,UAAUE,gBAAV,GAA6B;AAClC,QAAMR,UAAU,CAACI,eAAe,CAACK,gBAAjB,EAAmCF,kBAAnC,CAAhB;AACD;AAED,OAAO,UAAUG,uBAAV,CAAkC;AAACC,EAAAA;AAAD,CAAlC,EAA6C;AAClD,MAAI;AAAA,iBACY,MAAMR,cAAc,EADhC;AAAA,UACKS,GADL,QACKA,GADL;;AAEF,UAAMC,OAAO,GAAG,MAAMX,SAAS,CAACY,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,GAAlC,CAAtB;AACA,UAAMI,OAAO,GAAG,MAAMH,OAAO,CAACC,UAAR,CAAmB,OAAnB,EAA4BC,GAA5B,CAAgCJ,OAAO,CAACM,EAAR,CAAWC,QAAX,EAAhC,CAAtB;AAEA,UAAMC,IAAI,GAAGH,OAAO,CAACI,GAAR,EAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAPE,CASF;AACA;AACA;AACA;AAEA;AAED,GAhBD,CAgBE,OAAMI,GAAN,EAAW;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAMxB,UAAU,CAACK,eAAe,CAACoB,QAAjB,EAA2Bf,uBAA3B,CAAhB;AACD;AAED,OAAO,UAAUgB,iBAAV,GAA8B;AACnC,QAAM1B,UAAU,CAACK,eAAe,CAACsB,IAAjB,CAAhB;AACD;AAID,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CACRC,IAAI,CAACS,gBAAD,CADI,EAERT,IAAI,CAACyB,SAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, call, takeLatest, put } from 'redux-saga/effects'\nimport { firestore, getCurrentUser } from '../../firebase/firebase.utils'\nimport UserActionTypes from '../user/user.types'\nimport CartActionTypes from './cart.types'\nimport { clearCart } from './cart.actions'\n\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart())\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut)\n}\n\nexport function* addItemToUserCollection({payload}) {\n  try {\n    const {uid} = yield getCurrentUser()\n    const userRef = yield firestore.collection('users').doc(uid)\n    const itemRef = yield userRef.collection('items').doc(payload.id.toString())\n\n    const snap = itemRef.get()\n\n    console.log(snap)\n\n    // const batch = yield firestore.batch()\n    // const test = yield batch.set(itemRef, {\n    //   items: payload\n    // })\n\n    // yield batch.commit()\n\n  } catch(err) {\n    console.log(err)\n  }\n}\n\nexport function* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM, addItemToUserCollection)\n}\n\nexport function* clearItemFromCart() {\n  yield takeLatest(CartActionTypes.CLEA)\n}\n\n\n\nexport function* cartSagas() {\n  yield all([\n    call(onSignOutSuccess),\n    call(onAddItem)\n  ])\n}"]},"metadata":{},"sourceType":"module"}