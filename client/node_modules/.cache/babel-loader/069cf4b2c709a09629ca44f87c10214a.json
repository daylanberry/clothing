{"ast":null,"code":"import _objectSpread from \"/Users/daylanberry/Desktop/clothing/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { googleSignInFailure, signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\nfunction* getSnapshopFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data)));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshopFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshopFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshopFromUserAuth(userAuth);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOutUser() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(signOutUser)]);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","googleSignInFailure","signInSuccess","signInFailure","signOutSuccess","signOutFailure","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshopFromUserAuth","userAuth","userRef","snapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","signOutUser","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport { googleSignInFailure, signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions'\nimport userActionTypes from './user.types'\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils'\n\n\nfunction* getSnapshopFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth)\n    const snapshot = yield userRef.get()\n    yield put(signInSuccess({id: snapshot.id, ...snapshot.data}))\n  } catch(error) {\n    yield put(signInFailure(error))\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    yield getSnapshopFromUserAuth(user)\n\n  } catch(error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n\nexport function* signInWithEmail({payload: {email, password}}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapshopFromUserAuth(user)\n  } catch(error) {\n    put(signInFailure(error))\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser()\n    if (!userAuth) return;\n    yield getSnapshopFromUserAuth(userAuth)\n\n  } catch(error) {\n    put(signInFailure(error))\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n  } catch(error) {\n    put(signOutFailure(error))\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* signOutUser() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(signOutUser)\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}