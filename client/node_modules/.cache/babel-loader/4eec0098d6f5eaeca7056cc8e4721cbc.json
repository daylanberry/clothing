{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('hello');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error));\n  } // dispatch(fetchCollectionsStart())\n  // collectionRef.get()\n  // .then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //   dispatch(fetchCollectionsSuccess(collectionsMap))\n  // })\n  // .catch(err => dispatch(fetchCollectionsFailure(err.message)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SACEC,uBADF,EAEEC,uBAFF,QAIO,gBAJP;AAMA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AAED,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAD,CAAxB,CAAT;AACD,GAXsC,CAcrC;AAEA;AACA;AAEA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,SAAS,CACbO,eAAe,CAACW,uBADH,EAEbV,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n\n} from './shop.actions'\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('hello')\n\n  try {\n    const collectionRef = firestore.collection('collections')\n    const snapshot = yield collectionRef.get()\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n    yield put(fetchCollectionsSuccess(collectionsMap))\n\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error))\n  }\n\n\n    // dispatch(fetchCollectionsStart())\n\n    // collectionRef.get()\n    // .then(snapshot => {\n\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //   dispatch(fetchCollectionsSuccess(collectionsMap))\n    // })\n    // .catch(err => dispatch(fetchCollectionsFailure(err.message)))\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}