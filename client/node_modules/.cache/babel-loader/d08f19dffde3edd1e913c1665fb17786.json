{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('hello');\n  const collectionRef = firestore.collection('collections'); // dispatch(fetchCollectionsStart())\n  // collectionRef.get()\n  // .then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //   dispatch(fetchCollectionsSuccess(collectionsMap))\n  // })\n  // .catch(err => dispatch(fetchCollectionsFailure(err.message)))\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SACEC,uBADF,EAEEC,uBAFF,QAIO,gBAJP;AAMA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB,CAHuC,CAIrC;AAEA;AACA;AAEA;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMX,SAAS,CACbK,eAAe,CAACO,uBADH,EAEbN,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n\n} from './shop.actions'\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('hello')\n\n  const collectionRef = firestore.collection('collections')\n    // dispatch(fetchCollectionsStart())\n\n    // collectionRef.get()\n    // .then(snapshot => {\n\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //   dispatch(fetchCollectionsSuccess(collectionsMap))\n    // })\n    // .catch(err => dispatch(fetchCollectionsFailure(err.message)))\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}