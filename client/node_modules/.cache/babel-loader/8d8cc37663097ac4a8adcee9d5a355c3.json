{"ast":null,"code":"import _slicedToArray from \"/Users/daylanberry/Desktop/clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/daylanberry/Desktop/clothing/src/components/sign-up/SignUp.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.jsx';\nimport CustomButton from '../custom-button/CustomButton.jsx';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils.js';\nimport { signupStart } from '../../redux/user/user.actions';\nimport './SignUp.scss';\n\nconst SignUp = ({\n  signupStart\n}) => {\n  const _useState = useState({\n    displayName,\n    email,\n    password\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userSignUpCredentials = _useState2[0],\n        signup = _useState2[1];\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const _this$state = this.state,\n          displayName = _this$state.displayName,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    const signupStart = this.props.signupStart;\n    signupStart({\n      displayName,\n      email,\n      password\n    }); // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n    //   await createUserProfileDocument(user, {displayName})\n    //   this.setState({\n    //     displayName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: ''\n    //   })\n    // } catch(error) {\n    //   console.error('error at' + error)\n    // }\n  };\n\n  handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signupStart: userCredentials => dispatch(signupStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/components/sign-up/SignUp.jsx"],"names":["React","useState","connect","FormInput","CustomButton","auth","createUserProfileDocument","signupStart","SignUp","displayName","email","password","userSignUpCredentials","signup","handleSubmit","event","preventDefault","state","confirmPassword","alert","props","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/FormInput.jsx';\nimport CustomButton from '../custom-button/CustomButton.jsx'\n\nimport {auth, createUserProfileDocument } from '../../firebase/firebase.utils.js';\nimport { signupStart } from '../../redux/user/user.actions'\n\nimport './SignUp.scss'\n\nconst SignUp = ({ signupStart }) => {\n\n  const [userSignUpCredentials, signup] = useState({displayName, email, password})\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const {displayName, email, password, confirmPassword} = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\")\n      return;\n    }\n\n    const { signupStart } = this.props\n\n    signupStart({displayName, email, password})\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n\n    //   await createUserProfileDocument(user, {displayName})\n    //   this.setState({\n    //     displayName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: ''\n    //   })\n\n    // } catch(error) {\n    //   console.error('error at' + error)\n    // }\n\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n\n  }\n\n    return (\n      <div className='sign-up'>\n        <h2 className='title'>I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={this.handleChange}\n            label='Display Name'\n            required\n          />\n\n         <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={this.handleChange}\n            label='email'\n            required\n          />\n\n         <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={this.handleChange}\n            label='password'\n            required\n          />\n\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label='Confirm Password'\n            required\n          />\n\n        <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signupStart: (userCredentials) => dispatch(signupStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}