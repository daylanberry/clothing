{"ast":null,"code":"import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport { firestore, getCurrentUser } from '../../firebase/firebase.utils';\nimport { selectCurrentUser } from '../user/user.selectors';\nimport UserActionTypes from '../user/user.types';\nimport CartActionTypes from './cart.types';\nimport { clearCart, itemFailure } from './cart.actions';\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* updateCartInFirebase() {\n  const currentUser = yield select(selectCurrentUser);\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess)]);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/client/src/redux/cart/cart.sagas.js"],"names":["all","call","takeLatest","put","firestore","getCurrentUser","selectCurrentUser","UserActionTypes","CartActionTypes","clearCart","itemFailure","clearCartOnSignOut","updateCartInFirebase","currentUser","select","onSignOutSuccess","SIGN_OUT_SUCCESS","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,+BAA1C;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,gBAAvC;AAGA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMR,GAAG,CAACM,SAAS,EAAV,CAAT;AACD;AAED,OAAO,UAAUG,oBAAV,GAAiC;AACtC,QAAMC,WAAW,GAAG,MAAMC,MAAM,CAACR,iBAAD,CAAhC;AACD;AAED,OAAO,UAAUS,gBAAV,GAA6B;AAClC,QAAMb,UAAU,CAACK,eAAe,CAACS,gBAAjB,EAAmCL,kBAAnC,CAAhB;AACD;AAGD,OAAO,UAAUM,SAAV,GAAsB;AAC3B,QAAMjB,GAAG,CAAC,CACRC,IAAI,CAACc,gBAAD,CADI,CAAD,CAAT;AAID","sourcesContent":["import { all, call, takeLatest, put } from 'redux-saga/effects'\nimport { firestore, getCurrentUser } from '../../firebase/firebase.utils'\nimport { selectCurrentUser } from '../user/user.selectors'\nimport UserActionTypes from '../user/user.types'\nimport CartActionTypes from './cart.types'\nimport { clearCart, itemFailure } from './cart.actions'\n\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart())\n}\n\nexport function* updateCartInFirebase() {\n  const currentUser = yield select(selectCurrentUser)\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut)\n}\n\n\nexport function* cartSagas() {\n  yield all([\n    call(onSignOutSuccess),\n\n  ])\n}"]},"metadata":{},"sourceType":"module"}