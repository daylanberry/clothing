{"ast":null,"code":"import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport { firestore, getCurrentUser } from '../../firebase/firebase.utils';\nimport UserActionTypes from '../user/user.types';\nimport CartActionTypes from './cart.types';\nimport { clearCart } from './cart.actions';\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* addItemToUserCollection() {\n  const _ref = yield getCurrentUser(),\n        uid = _ref.uid;\n\n  const userRef = yield firestore.collection('users').doc(uid);\n  const cartRef = yield userRef.collection('cartItems');\n  const batch = yield firestore.batch();\n  const test = yield batch.set(userRef, {\n    item: 'item'\n  });\n  yield batch.commit();\n}\nexport function* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM, addItemToUserCollection);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/client/src/redux/cart/cart.sagas.js"],"names":["all","call","takeLatest","put","firestore","getCurrentUser","UserActionTypes","CartActionTypes","clearCart","clearCartOnSignOut","onSignOutSuccess","SIGN_OUT_SUCCESS","addItemToUserCollection","uid","userRef","collection","doc","cartRef","batch","test","set","item","commit","onAddItem","ADD_ITEM","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,+BAA1C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAGA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMN,GAAG,CAACK,SAAS,EAAV,CAAT;AACD;AAED,OAAO,UAAUE,gBAAV,GAA6B;AAClC,QAAMR,UAAU,CAACI,eAAe,CAACK,gBAAjB,EAAmCF,kBAAnC,CAAhB;AACD;AAED,OAAO,UAAUG,uBAAV,GAAoC;AAAA,eAC3B,MAAMP,cAAc,EADO;AAAA,QAClCQ,GADkC,QAClCA,GADkC;;AAEzC,QAAMC,OAAO,GAAG,MAAMV,SAAS,CAACW,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,GAAlC,CAAtB;AACA,QAAMI,OAAO,GAAG,MAAMH,OAAO,CAACC,UAAR,CAAmB,WAAnB,CAAtB;AAEA,QAAMG,KAAK,GAAG,MAAMd,SAAS,CAACc,KAAV,EAApB;AACA,QAAMC,IAAI,GAAG,MAAMD,KAAK,CAACE,GAAN,CAAUN,OAAV,EAAmB;AACpCO,IAAAA,IAAI,EAAE;AAD8B,GAAnB,CAAnB;AAIA,QAAMH,KAAK,CAACI,MAAN,EAAN;AAED;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAMrB,UAAU,CAACK,eAAe,CAACiB,QAAjB,EAA2BZ,uBAA3B,CAAhB;AACD;AAED,OAAO,UAAUa,SAAV,GAAsB;AAC3B,QAAMzB,GAAG,CAAC,CACRC,IAAI,CAACS,gBAAD,CADI,EAERT,IAAI,CAACsB,SAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, call, takeLatest, put } from 'redux-saga/effects'\nimport { firestore, getCurrentUser } from '../../firebase/firebase.utils'\nimport UserActionTypes from '../user/user.types'\nimport CartActionTypes from './cart.types'\nimport { clearCart } from './cart.actions'\n\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart())\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut)\n}\n\nexport function* addItemToUserCollection() {\n  const {uid} = yield getCurrentUser()\n  const userRef = yield firestore.collection('users').doc(uid)\n  const cartRef = yield userRef.collection('cartItems')\n\n  const batch = yield firestore.batch()\n  const test = yield batch.set(userRef, {\n    item: 'item'\n  })\n\n  yield batch.commit()\n\n}\n\nexport function* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM, addItemToUserCollection)\n}\n\nexport function* cartSagas() {\n  yield all([\n    call(onSignOutSuccess),\n    call(onAddItem)\n  ])\n}"]},"metadata":{},"sourceType":"module"}