{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/clothing/client/src/components/chat-components/Chat.jsx\";\nimport React from 'react';\nimport './Chat.scss';\nimport { connect } from 'react-redux';\nimport { toggleChatModal } from '../../redux/chat/chat.actions';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport SendMessage from './SendMessage';\nimport MessageList from './MessageList';\nimport RoomList from './RoomList';\nimport keys from '../../keys.js';\nimport axios from 'axios';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = (text, roomId) => {\n      this.currentUser.sendSimpleMessage({\n        text,\n        roomId: this.state.roomId\n      });\n    };\n\n    this.getRooms = () => {\n      this.currentUser.getJoinableRooms().then(joinableRooms => {\n        this.setState({\n          joinableRooms,\n          currentUser: this.currentUser,\n          joinedRooms: this.currentUser.rooms\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.subscribeToRoom = roomId => {\n      this.setState({\n        messages: []\n      });\n      this.currentUser.subscribeToRoom({\n        roomId: roomId,\n        hooks: {\n          onMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n        }\n      }).then(room => {\n        this.setState({\n          roomId: room.id\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.createUser = user => {\n      axios.post('/users', {\n        username: user\n      }).then(res => console.log(res)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      messages: [],\n      currentUser: {},\n      joinableRooms: [],\n      joinedRooms: [],\n      roomId: null,\n      userId: ''\n    };\n  }\n\n  componentDidMount() {\n    const chatManager = new ChatManager({\n      instanceLocator: keys.instanceLocator,\n      userId: 'daylan',\n      tokenProvider: new TokenProvider({\n        url: keys.tokenUrl\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.currentUser = currentUser;\n      this.getRooms();\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      className: \"rooms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(RoomList, {\n      rooms: [...this.state.joinableRooms, ...this.state.joinedRooms],\n      subscribeToRoom: this.subscribeToRoom,\n      roomId: this.state.roomId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"texts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      onClick: () => this.props.toggleHidden(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\u2715\")), React.createElement(SendMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.createUser('test'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"test\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  toggleHidden: () => dispatch(toggleChatModal())\n});\n\nexport default connect(null, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/client/src/components/chat-components/Chat.jsx"],"names":["React","connect","toggleChatModal","ChatManager","TokenProvider","SendMessage","MessageList","RoomList","keys","axios","Chat","Component","constructor","props","sendMessage","text","roomId","currentUser","sendSimpleMessage","state","getRooms","getJoinableRooms","then","joinableRooms","setState","joinedRooms","rooms","catch","err","console","log","subscribeToRoom","messages","hooks","onMessage","message","room","id","createUser","user","post","username","res","userId","componentDidMount","chatManager","instanceLocator","tokenProvider","url","tokenUrl","render","toggleHidden","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Chat.scss'\nimport { connect } from 'react-redux'\nimport { toggleChatModal } from '../../redux/chat/chat.actions'\nimport { ChatManager, TokenProvider} from '@pusher/chatkit-client'\n\nimport SendMessage from './SendMessage'\nimport MessageList from './MessageList'\nimport RoomList from './RoomList'\n\nimport keys from '../../keys.js'\nimport axios from 'axios'\n\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      messages: [],\n      currentUser: {},\n      joinableRooms: [],\n      joinedRooms: [],\n      roomId: null,\n      userId: ''\n    }\n  }\n\n  componentDidMount() {\n\n    const chatManager = new ChatManager({\n      instanceLocator: keys.instanceLocator,\n      userId: 'daylan',\n      tokenProvider: new TokenProvider({url: keys.tokenUrl})\n    })\n\n    chatManager.connect()\n    .then(currentUser => {\n      this.currentUser = currentUser\n      this.getRooms()\n    })\n    .catch(err => console.log(err))\n  }\n\n\n  sendMessage = (text, roomId) => {\n    this.currentUser.sendSimpleMessage({\n      text,\n      roomId: this.state.roomId,\n    })\n  }\n\n  getRooms = () => {\n  this.currentUser.getJoinableRooms()\n    .then(joinableRooms => {\n      this.setState({\n        joinableRooms,\n        currentUser: this.currentUser,\n        joinedRooms: this.currentUser.rooms\n      })\n    })\n    .catch(err => console.log(err))\n  }\n\n  subscribeToRoom = (roomId) =>{\n    this.setState({messages: []})\n    this.currentUser.subscribeToRoom({\n      roomId: roomId,\n        hooks: {\n          onMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            })\n          }\n        }\n    })\n    .then(room => {\n      this.setState({\n        roomId: room.id\n      })\n    })\n    .catch(err => console.log(err))\n\n  }\n\n  createUser = (user) => {\n    axios.post('/users', {\n      username: user\n    })\n    .then((res) => console.log(res))\n    .catch(err => console.log(err))\n  }\n\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='chat-container'>\n          <div className='content'>\n            <aside className='rooms'>\n              <RoomList\n                rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]}\n                subscribeToRoom={this.subscribeToRoom}\n                roomId={this.state.roomId}\n              />\n            </aside>\n\n            <section className='texts'>\n              <MessageList messages={this.state.messages}/>\n            </section>\n            <span onClick={() => this.props.toggleHidden()}>&#10005;</span>\n          </div>\n            <SendMessage/>\n            <button onClick={() => this.createUser('test')}>test</button>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  toggleHidden: () => dispatch(toggleChatModal())\n})\n\n\nexport default connect(null, mapDispatchToProps)(Chat)"]},"metadata":{},"sourceType":"module"}