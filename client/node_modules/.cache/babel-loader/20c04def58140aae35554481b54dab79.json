{"ast":null,"code":"import _objectSpread from \"/Users/daylanberry/Desktop/clothing/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app'; //database\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAkfCustv-z8X9hmSE8oJFydk4aEq_pi2A\",\n  authDomain: \"trans-array-253223.firebaseapp.com\",\n  databaseURL: \"https://trans-array-253223.firebaseio.com\",\n  projectId: \"trans-array-253223\",\n  storageBucket: \"trans-array-253223.appspot.com\",\n  messagingSenderId: \"647533815474\",\n  appId: \"1:647533815474:web:da183ff54e071691b8cbab\",\n  measurementId: \"G-RP7PEME805\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(userAuth.displayName);\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config); //have access to this do to import auth\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider(); //want to always trigger google popup whenever we use google auth provider\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","displayName","exists","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB,C,CACA;;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,oCAFC;AAGbC,EAAAA,WAAW,EAAE,2CAHA;AAIbC,EAAAA,SAAS,EAAE,oBAJE;AAKbC,EAAAA,aAAa,EAAE,gCALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACU,WAArB;;AAGA,MAAI,CAACJ,QAAQ,CAACK,MAAd,EAAsB;AAAA,UACZD,WADY,GACWV,QADX,CACZU,WADY;AAAA,UACCE,KADD,GACWZ,QADX,CACCY,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMZ,OAAO,CAACa,GAAR;AACJL,QAAAA,WADI;AAEJE,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDZ,cAJC,EAAN;AAQD,KATD,CASE,OAAOe,KAAP,EAAc;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AAED,CA9BM;AAgCPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB,E,CAEA;;AACA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB,C,CAEA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app'\n//database\nimport 'firebase/firestore';\nimport 'firebase/auth'\n\nconst config = {\n  apiKey: \"AIzaSyAkfCustv-z8X9hmSE8oJFydk4aEq_pi2A\",\n  authDomain: \"trans-array-253223.firebaseapp.com\",\n  databaseURL: \"https://trans-array-253223.firebaseio.com\",\n  projectId: \"trans-array-253223\",\n  storageBucket: \"trans-array-253223.appspot.com\",\n  messagingSenderId: \"647533815474\",\n  appId: \"1:647533815474:web:da183ff54e071691b8cbab\",\n  measurementId: \"G-RP7PEME805\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n  const snapShot = await userRef.get();\n\n  console.log(userAuth.displayName)\n\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n\n      })\n\n    } catch (error) {\n      console.log('error creating user', error.message)\n    }\n  }\n\n  return userRef\n\n}\n\nfirebase.initializeApp(config)\n\n//have access to this do to import auth\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n//want to always trigger google popup whenever we use google auth provider\nprovider.setCustomParameters({prompt: 'select_account'});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}