{"ast":null,"code":"import _objectSpread from \"/Users/daylanberry/Desktop/clothing/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport Redux from 'react-redux';\nimport CartActionTypes from './cart.types.js';\nimport { addItemToCart, removeItemFromCart } from './cart.utils.js';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n  error: null\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.ADD_ITEM_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    case CartActionTypes.SET_CART_FROM_FIREBASE:\n      return _objectSpread({}, state, {\n        cartItems: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/client/src/redux/cart/cart.reducer.js"],"names":["Redux","CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","error","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","ADD_ITEM_FAILURE","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART","SET_CART_FROM_FIREBASE"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,iBAAlD;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKV,eAAe,CAACW,kBAArB;AACE,+BACKH,KADL;AAEEJ,QAAAA,MAAM,EAAE,CAACI,KAAK,CAACJ;AAFjB;;AAIF,SAAKJ,eAAe,CAACY,QAArB;AACE,+BACKJ,KADL;AAEEH,QAAAA,SAAS,EAAEJ,aAAa,CAACO,KAAK,CAACH,SAAP,EAAkBI,MAAM,CAACI,OAAzB;AAF1B;;AAKF,SAAKb,eAAe,CAACc,gBAArB;AACE,+BACKN,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAFhB;;AAKF,SAAKb,eAAe,CAACe,oBAArB;AACE,+BACKP,KADL;AAEEH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBW,MAAhB,CAAuBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EAAlE;AAFb;;AAKA,SAAKlB,eAAe,CAACmB,WAArB;AACE,+BACKX,KADL;AAEEH,QAAAA,SAAS,EAAEH,kBAAkB,CAACM,KAAK,CAACH,SAAP,EAAkBI,MAAM,CAACI,OAAzB;AAF/B;;AAKF,SAAKb,eAAe,CAACoB,UAArB;AACE,+BACKZ,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAKL,eAAe,CAACqB,sBAArB;AACE,+BACKb,KADL;AAEEH,QAAAA,SAAS,EAAEI,MAAM,CAACI;AAFpB;;AAKJ;AACE,aAAOL,KAAP;AA3CJ;AA8CD,CA/CD;;AAiDA,eAAeD,WAAf","sourcesContent":["import Redux from 'react-redux'\nimport CartActionTypes from './cart.types.js'\n\nimport { addItemToCart, removeItemFromCart } from './cart.utils.js'\n\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n  error: null\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      }\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      }\n\n    case CartActionTypes.ADD_ITEM_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      }\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      }\n\n      case CartActionTypes.REMOVE_ITEM:\n        return {\n          ...state,\n          cartItems: removeItemFromCart(state.cartItems, action.payload)\n        }\n\n      case CartActionTypes.CLEAR_CART:\n        return {\n          ...state,\n          cartItems: []\n        }\n\n      case CartActionTypes.SET_CART_FROM_FIREBASE:\n        return {\n          ...state,\n          cartItems: action.payload\n        }\n\n    default:\n      return state\n  }\n\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}