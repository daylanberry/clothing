{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { googleSignInStart } from './user.actions';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nfunction* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","googleSignInStart","userActionTypes","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","error","console","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;;AAEA,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AAAA,iBACa,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADnB;AAAA,UACKI,IADL,QACKA,IADL;;AAGF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACK,yBAAD,EAA4BG,IAA5B,CAA1B;AACD,GAJD,CAIE,OAAME,KAAN,EAAa;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,OAAO,UAAUG,mBAAV,GAAgC;AACrC,QAAMhB,UAAU,CAACK,eAAe,CAACY,oBAAjB,EAAuCR,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACC,IAAI,CAACa,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport { googleSignInStart } from './user.actions'\nimport userActionTypes from './user.types'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nfunction* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n\n    const userRef = yield call(createUserProfileDocument, user)\n  } catch(error) {\n    console.log(error)\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}