{"ast":null,"code":"import _objectSpread from \"/Users/daylanberry/Desktop/clothing/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { googleSignInFailure, signInSuccess, emailSignInFailure } from './user.actions';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nfunction* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data)));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","googleSignInFailure","signInSuccess","emailSignInFailure","userActionTypes","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","snapshot","get","googleSignInSuccess","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","userSnapShot","emailSignInSuccess","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,mBAAT,EAA8BC,aAA9B,EAA6CC,kBAA7C,QAAuE,gBAAvE;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;;AAEA,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AAAA,iBACa,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADnB;AAAA,UACKI,IADL,QACKA,IADL;;AAEF,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACO,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AAGA,UAAMf,GAAG,CAACgB,mBAAmB;AAAEC,MAAAA,EAAE,EAAEH,QAAQ,CAACG;AAAf,OAAsBH,QAAQ,CAACI,IAA/B,EAApB,CAAT;AAED,GARD,CAQE,OAAMC,KAAN,EAAa;AACb,UAAMnB,GAAG,CAACG,mBAAmB,CAACgB,KAAD,CAApB,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMrB,UAAU,CAACO,eAAe,CAACe,oBAAjB,EAAuCX,gBAAvC,CAAhB;AACD;AAGD,OAAO,UAAUY,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC7D,MAAI;AAAA,kBAEe,MAAMlB,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAFrB;AAAA,UAEMb,IAFN,SAEMA,IAFN;;AAIF,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACO,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMe,YAAY,GAAG,MAAMd,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMf,GAAG,CAAC4B,kBAAkB;AAAEX,MAAAA,EAAE,EAAEU,YAAY,CAACV;AAAnB,OAA0BU,YAAY,CAACT,IAAb,EAA1B,EAAnB,CAAT;AAED,GATD,CASE,OAAMC,KAAN,EAAa;AACbnB,IAAAA,GAAG,CAACK,kBAAkB,CAACc,KAAD,CAAnB,CAAH;AACD;AACF;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACO,eAAe,CAACwB,mBAAjB,EACdR,eADc,CAAhB;AAED;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CACRC,IAAI,CAACkB,mBAAD,CADI,EAERlB,IAAI,CAAC2B,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport { googleSignInFailure, signInSuccess, emailSignInFailure } from './user.actions'\nimport userActionTypes from './user.types'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nfunction* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield call(createUserProfileDocument, user)\n    const snapshot = yield userRef.get()\n\n\n    yield put(googleSignInSuccess({id: snapshot.id, ...snapshot.data}))\n\n  } catch(error) {\n    yield put(googleSignInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n\nexport function* signInWithEmail({payload: {email, password}}) {\n  try {\n\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapShot = yield userRef.get()\n\n    yield put(emailSignInSuccess({id: userSnapShot.id, ...userSnapShot.data()}))\n\n  } catch(error) {\n    put(emailSignInFailure(error))\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}