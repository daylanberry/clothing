{"ast":null,"code":"import _objectSpread from \"/Users/daylanberry/Desktop/clothing/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { googleSignInFailure, signInSuccess, signInFailure, signOutSuccess, signOutFailure, signupSuccess, signupFailure } from './user.actions';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport axios from 'axios';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport keys from '../../keys.js';\n\nconst createUser = user => {\n  axios.post('/users', {\n    username: user\n  }).then(res => console.log(res)).catch(err => console.log(err));\n};\n\nfunction* getSnapshopFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const snapshot = yield userRef.get();\n    const displayName = snapshot.data().displayName;\n    yield createUser(displayName);\n    yield put(signInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshopFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshopFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshopFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOutUser() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onUserSignupStart({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signupSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}\nexport function* signInAfterSignup({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshopFromUserAuth(user, additionalData);\n}\nexport function* onSignupSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignup);\n}\nexport function* signupStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, onUserSignupStart);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(signOutUser), call(signupStart), call(onSignupSuccess)]);\n}","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","googleSignInFailure","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signupSuccess","signupFailure","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","axios","ChatManager","TokenProvider","keys","createUser","user","post","username","then","res","console","log","catch","err","getSnapshopFromUserAuth","userAuth","additionalData","userRef","snapshot","get","displayName","data","id","error","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","signOutUser","SIGN_OUT_START","onUserSignupStart","createUserWithEmailAndPassword","signInAfterSignup","onSignupSuccess","SIGN_UP_SUCCESS","signupStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport { googleSignInFailure, signInSuccess, signInFailure, signOutSuccess, signOutFailure, signupSuccess, signupFailure } from './user.actions'\nimport userActionTypes from './user.types'\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils'\n\nimport axios from 'axios'\nimport { ChatManager, TokenProvider} from '@pusher/chatkit-client'\nimport keys from '../../keys.js'\n\nconst createUser = (user) => {\n  axios.post('/users', {\n    username: user\n  })\n  .then((res) => console.log(res))\n  .catch(err => console.log(err))\n}\n\n\nfunction* getSnapshopFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData)\n    const snapshot = yield userRef.get()\n    const displayName = snapshot.data().displayName\n    yield createUser(displayName)\n\n    yield put(signInSuccess({id: snapshot.id, ...snapshot.data()}))\n  } catch(error) {\n    yield put(signInFailure(error))\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    yield getSnapshopFromUserAuth(user)\n\n  } catch(error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n\nexport function* signInWithEmail({payload: {email, password}}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapshopFromUserAuth(user)\n  } catch(error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser()\n    if (!userAuth) return;\n    yield getSnapshopFromUserAuth(userAuth)\n\n\n  } catch(error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n  } catch(error) {\n    yield put(signOutFailure(error))\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* signOutUser() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\n}\n\n\nexport function* onUserSignupStart({payload: {displayName, email, password }}) {\n\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n    yield put(signupSuccess({user, additionalData: {displayName}}))\n\n  } catch(error) {\n    yield put(signupFailure(error))\n  }\n}\n\nexport function* signInAfterSignup({payload: { user, additionalData }}) {\n  yield getSnapshopFromUserAuth(user, additionalData)\n}\n\nexport function* onSignupSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignup)\n}\n\n\nexport function* signupStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, onUserSignupStart)\n}\n\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(signOutUser),\n    call(signupStart),\n    call(onSignupSuccess)\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}