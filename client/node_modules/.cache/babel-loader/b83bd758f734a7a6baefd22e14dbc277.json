{"ast":null,"code":"import _objectSpread from \"/Users/daylanberry/Desktop/clothing/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/daylanberry/Desktop/clothing/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/daylanberry/Desktop/clothing/client/src/components/sign-up/SignUp.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.jsx';\nimport CustomButton from '../custom-button/CustomButton.jsx';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils.js';\nimport { signupStart } from '../../redux/user/user.actions';\nimport './SignUp.scss';\n\nconst SignUp = ({\n  signupStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    } // const { signupStart } = this.props\n\n\n    signupStart({\n      displayName,\n      email,\n      password\n    }); // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n    //   await createUserProfileDocument(user, {displayName})\n    //   this.setState({\n    //     displayName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: ''\n    //   })\n    // } catch(error) {\n    //   console.error('error at' + error)\n    // }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signupStart: userCredentials => dispatch(signupStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/client/src/components/sign-up/SignUp.jsx"],"names":["React","useState","connect","FormInput","CustomButton","auth","createUserProfileDocument","signupStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/FormInput.jsx';\nimport CustomButton from '../custom-button/CustomButton.jsx'\n\nimport {auth, createUserProfileDocument } from '../../firebase/firebase.utils.js';\nimport { signupStart } from '../../redux/user/user.actions'\n\nimport './SignUp.scss'\n\nconst SignUp = ({ signupStart }) => {\n\n  const [userCredentials, setCredentials] = useState({displayName: '', email: '', password: '', confirmPassword: ''})\n  const {displayName, email, password, confirmPassword} = userCredentials\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\")\n      return;\n    }\n\n    // const { signupStart } = this.props\n\n    signupStart({displayName, email, password})\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n\n    //   await createUserProfileDocument(user, {displayName})\n    //   this.setState({\n    //     displayName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: ''\n    //   })\n\n    // } catch(error) {\n    //   console.error('error at' + error)\n    // }\n\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setCredentials({...userCredentials, [name]: value})\n\n  }\n\n    return (\n      <div className='sign-up'>\n        <h2 className='title'>I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n\n        <form className='sign-up-form' onSubmit={handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={handleChange}\n            label='Display Name'\n            required\n          />\n\n         <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            label='email'\n            required\n          />\n\n         <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            label='password'\n            required\n          />\n\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            required\n          />\n\n        <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signupStart: (userCredentials) => dispatch(signupStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}