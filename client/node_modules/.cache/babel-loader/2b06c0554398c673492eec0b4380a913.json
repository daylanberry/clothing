{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/clothing/src/pages/shop/ShopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nimport CollectionPage from '../collection/collection.component'; // import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nconst CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  // state = {\n  //   loading: true\n  // }\n  // unsubscribeFromSnapShot = null;\n  // componentDidMount() {\n  //   const { updateCollections } = this.props\n  //   const collectionRef = firestore.collection('collections')\n  //   collectionRef.onSnapshot( async snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //     updateCollections(collectionsMap)\n  //     this.setState({loading: false})\n  //   })\n  // }\n  componentDidMount() {}\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverViewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({//updateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/pages/shop/ShopPage.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","CollectionsOverview","WithSpinner","CollectionPage","CollectionsOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","render","match","props","loading","state","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,KAAV,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B,C,CAEA;;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMI,yBAAyB,GAAGH,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACrC;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAAA,UAECE,OAFD,GAEa,KAAKC,KAFlB,CAECD,OAFD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACI,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGH,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEC;AAA3C,SAAwDD,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGH,KAAD,IAAW,oBAAE,yBAAF;AAA4B,QAAA,SAAS,EAAEC;AAAvC,SAAoDD,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAhCoC;;AAoCvC,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK,CACtC;AADsC,CAAL,CAAnC;;AAKA,eAAelB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCT,QAAlC,CAAf","sourcesContent":["import React from 'react'\nimport  { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview'\nimport WithSpinner from '../../components/with-spinner/WithSpinner'\n\nimport CollectionPage from '../collection/collection.component'\n\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nconst CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  // state = {\n  //   loading: true\n  // }\n\n  // unsubscribeFromSnapShot = null;\n\n  // componentDidMount() {\n  //   const { updateCollections } = this.props\n\n  //   const collectionRef = firestore.collection('collections')\n\n  //   collectionRef.onSnapshot( async snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //     updateCollections(collectionsMap)\n  //     this.setState({loading: false})\n  //   })\n  // }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { match } = this.props\n    const { loading } = this.state\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} render={(props) => <CollectionsOverViewWithSpinner isLoading={loading} {...props}/>} />\n        <Route path={`${match.path}/:collectionId`} render={(props) => < CollectionPageWithSpinner isLoading={loading} {...props}/>} />\n      </div>\n    )\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  //updateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap))\n})\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}