{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/clothing/src/pages/shop/ShopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  // componentDidMount() {\n  //   const { updateCollections } = this.props\n  //   const collectionRef = firestore.collection('collections')\n  //   collectionRef.onSnapshot( async snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //     updateCollections(collectionsMap)\n  //     this.setState({loading: false})\n  //   })\n  // }\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      console.log(snapshot);\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverViewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/src/pages/shop/ShopPage.jsx"],"names":["React","Route","connect","updateCollections","CollectionsOverview","WithSpinner","CollectionPage","firestore","convertCollectionsSnapshotToMap","CollectionsOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","get","then","snapshot","console","log","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,KAAV,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGL,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAMrCC,uBANqC,GAMX,IANW;AAAA;;AAQrC;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAAA,UACVb,iBADU,GACY,KAAKc,KADjB,CACVd,iBADU;AAGlB,UAAMe,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMG,cAAc,GAAGjB,+BAA+B,CAACc,QAAD,CAAtD;AACAnB,MAAAA,iBAAiB,CAACsB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAND;AAOD;;AAEDa,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKX,KADhB,CACCW,KADD;AAAA,UAECd,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAE,yBAAF;AAA4B,QAAA,SAAS,EAAEH;AAAvC,SAAoDG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA3CoC;;AA+CvC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtC5B,EAAAA,iBAAiB,EAAGsB,cAAD,IAAoBM,QAAQ,CAAC5B,iBAAiB,CAACsB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAKA,eAAevB,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from 'react'\nimport  { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview'\nimport WithSpinner from '../../components/with-spinner/WithSpinner'\n\nimport CollectionPage from '../collection/collection.component'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nconst CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  }\n\n\n  unsubscribeFromSnapShot = null;\n\n  // componentDidMount() {\n  //   const { updateCollections } = this.props\n\n  //   const collectionRef = firestore.collection('collections')\n\n  //   collectionRef.onSnapshot( async snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //     updateCollections(collectionsMap)\n  //     this.setState({loading: false})\n  //   })\n  // }\n\n  componentDidMount() {\n    const { updateCollections } = this.props\n\n    const collectionRef = firestore.collection('collections')\n\n    collectionRef.get()\n    .then(snapshot => {\n      console.log(snapshot)\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      updateCollections(collectionsMap)\n      this.setState({loading: false})\n    })\n  }\n\n  render() {\n    const { match } = this.props\n    const { loading } = this.state\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} render={(props) => <CollectionsOverViewWithSpinner isLoading={loading} {...props}/>} />\n        <Route path={`${match.path}/:collectionId`} render={(props) => < CollectionPageWithSpinner isLoading={loading} {...props}/>} />\n      </div>\n    )\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap))\n})\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}