{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/clothing/client/src/pages/shop/ShopPage.jsx\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'; //import CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverview.container'\n\nimport WithSpinner from '../../components/with-spinner/WithSpinner'; //import CollectionPageContainer from '../collection/CollectionPage.container'\n\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/CollectionsOverview.container'));\nconst CollectionPageContainer = lazy(() => import('../collection/CollectionPage.container')); // import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(WithSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/daylanberry/Desktop/clothing/client/src/pages/shop/ShopPage.jsx"],"names":["React","useEffect","lazy","Suspense","Route","connect","createStructuredSelector","fetchCollectionsStart","WithSpinner","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAAUC,KAAV,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,qBAAT,QAAsC,+BAAtC,C,CAEA;;AAEA,OAAOC,WAAP,MAAwB,2CAAxB,C,CAEA;;AAEA,MAAMC,4BAA4B,GAAGP,IAAI,CAAC,MAAM,OAAO,qEAAP,CAAP,CAAzC;AAEA,MAAMQ,uBAAuB,GAAGR,IAAI,CAAC,MAAM,OAAO,wCAAP,CAAP,CAApC,C,CAEA;;AAEA,MAAMS,QAAQ,GAAG,CAAC;AAACJ,EAAAA,qBAAD;AAAwBK,EAAAA;AAAxB,CAAD,KAAoC;AAEnDX,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAKE,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEK,KAAK,CAACC,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEJ,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAAjC;AAAkD,IAAA,SAAS,EAAEH,uBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADF,CADF;AAUH,CAjBD;;AAoBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,qBAAqB,EAAE,MAAMQ,QAAQ,CAACR,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAKA,eAAeF,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react'\nimport  { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'\n\n//import CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverview.container'\n\nimport WithSpinner from '../../components/with-spinner/WithSpinner'\n\n//import CollectionPageContainer from '../collection/CollectionPage.container'\n\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/CollectionsOverview.container'))\n\nconst CollectionPageContainer = lazy(() => import('../collection/CollectionPage.container'))\n\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nconst ShopPage = ({fetchCollectionsStart, match}) => {\n\n  useEffect(() => {\n    fetchCollectionsStart()\n  }, [fetchCollectionsStart])\n\n\n    return (\n      <div className='shop-page'>\n        <Suspense fallback={<WithSpinner />}>\n        <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}/>\n\n        <Route exact path={`${match.path}/:collectionId`} component={CollectionPageContainer} />\n        </Suspense>\n      </div>\n    )\n\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n})\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}